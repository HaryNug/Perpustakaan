"""empty message

Revision ID: 1be2a9889d34
Revises: ee06b15a0c0a
Create Date: 2023-06-16 13:32:26.445362

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1be2a9889d34'
down_revision = 'ee06b15a0c0a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transaction',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('book_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('admin_approve', sa.String(), nullable=True),
    sa.Column('admin_return', sa.String(), nullable=True),
    sa.Column('requested_date', sa.DateTime(), nullable=False),
    sa.Column('approve_date', sa.DateTime(), nullable=True),
    sa.Column('return_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.drop_table('borrowed')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('borrowed',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('book_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('admin_approve', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('admin_return', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('requested_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('approve_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('return_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], name='borrowed_book_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='borrowed_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='borrowed_pkey'),
    sa.UniqueConstraint('id', name='borrowed_id_key')
    )
    op.drop_table('transaction')
    # ### end Alembic commands ###
